// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Board {
  CBSE
  ICSE
  TBSE
  Other
}

enum TopicStatus {
  Complete
  Pending
  Incomplete
}

enum PaymentMode {
  Cash
  Online
}

enum PaymentExchangeType {
  Received
  Sent
}

enum MemberType {
  Student
  Teacher
}

model Teacher {
  teacher_id       String   @id
  first_name       String
  last_name        String
  dob              DateTime
  email            String?  @unique
  phone_number     String
  address          String?
  sex              String
  primary_language String
  created_at       DateTime @default(now())
  salary           Float

  subjects       SubjectTeachers[]
  batch_teachers BatchTeachers[]
  stay_duration  TeacherStayDuration[]
}

model Student {
  student_id       String   @id
  first_name       String
  last_name        String
  dob              DateTime
  email            String?  @unique
  phone_number     String
  address          String?
  sex              String
  primary_language String
  created_at       DateTime @default(now())

  batch_students BatchStudents[]
  stay_duration  StudentStayDuration[]
}

model Batch {
  batch_id   String   @id
  batch_name String
  medium     String?
  created_at DateTime @default(now())

  batch_students        BatchStudents[]
  batch_teachers        BatchTeachers[]
  student_stay_duration StudentStayDuration[]
  batch_timings         BatchTimings[]
  batch_subjects        BatchSubjects[]
  batch_topic_status    BatchTopicStatus[]
}

model BatchStudents {
  batch_id   String
  student_id String
  created_at DateTime @default(now())

  student Student @relation(fields: [student_id], references: [student_id])
  batch   Batch   @relation(fields: [batch_id], references: [batch_id])

  @@id([batch_id, student_id])
}

model BatchTeachers {
  batch_id   String
  teacher_id String
  created_at DateTime @default(now())

  teacher Teacher @relation(fields: [teacher_id], references: [teacher_id])
  batch   Batch   @relation(fields: [batch_id], references: [batch_id])

  @@id([batch_id, teacher_id])
}

model StudentStayDuration {
  stay_id      String    @id
  student_id   String
  batch_id     String
  joining_date DateTime
  leaving_date DateTime?
  created_at   DateTime  @default(now())

  student Student @relation(fields: [student_id], references: [student_id])
  batch   Batch   @relation(fields: [batch_id], references: [batch_id])
}

model TeacherStayDuration {
  stay_id      String    @id
  teacher_id   String
  joining_date DateTime
  leaving_date DateTime?
  created_at   DateTime  @default(now())

  teacher Teacher @relation(fields: [teacher_id], references: [teacher_id])
}

model BatchTimings {
  timing_id  String   @id
  batch_id   String
  start_time DateTime
  end_time   DateTime
  day        String
  created_at DateTime @default(now())

  batch Batch @relation(fields: [batch_id], references: [batch_id])
}

model BatchSubjects {
  subject_id String
  batch_id   String
  created_at DateTime @default(now())

  subject Subject @relation(fields: [subject_id], references: [subject_id])
  batch   Batch   @relation(fields: [batch_id], references: [batch_id])

  @@id([batch_id, subject_id])
}

model Subject {
  subject_id   String   @id
  subject_name String
  created_at   DateTime @default(now())

  subject_teachers SubjectTeachers[]

  batches BatchSubjects[]
}

model SubjectTeachers {
  subject_id String
  teacher_id String
  created_at DateTime @default(now())

  subject Subject @relation(fields: [subject_id], references: [subject_id])
  teacher Teacher @relation(fields: [teacher_id], references: [teacher_id])

  @@id([subject_id, teacher_id])
}

model Syllabus {
  syllabus_id   String   @id
  subject_id    String
  syllabus_name String
  class         String
  board         Board
  created_at    DateTime @default(now())

  topic SyllabusTopic[]
}

model Topic {
  topic_id    String   @id
  syllabus_id String
  topic_name  String
  created_at  DateTime @default(now())

  syllabus           SyllabusTopic[]
  batch_topic_status BatchTopicStatus[]
}

model SyllabusTopic {
  syllabus_id String
  topic_id    String
  created_at  DateTime @default(now())

  syllabus Syllabus @relation(fields: [syllabus_id], references: [syllabus_id])
  topic    Topic    @relation(fields: [topic_id], references: [topic_id])

  @@id([syllabus_id, topic_id])
}

model BatchTopicStatus {
  batch_id   String
  topic_id   String
  status     TopicStatus
  start_date DateTime
  end_date   DateTime
  created_at DateTime    @default(now())

  batch Batch @relation(fields: [batch_id], references: [batch_id])
  topic Topic @relation(fields: [topic_id], references: [topic_id])

  @@id([batch_id, topic_id])
}

model Payments {
  payment_id      String              @id
  paymentExchange PaymentExchangeType
  mode            PaymentMode
  amount          Int
  member          MemberType
  member_id       String
  paymentDate     DateTime
  created_at      DateTime            @default(now())
}
